这一章是关于set和map的查找表问题，
那么  如果查找元素有无（变个方式就是，只出现一次（去重）就相当于存在，而不关心其数量）就用set
而如果查找对应关系，如元素a出现了几次（或者说某个元素出现的次数对题目来说是有意义的），就用map字典。
for (char c :  t.toCharArray()) need.put(c, need.getOrDefault(c, 0) + 1);
对于不同的set和map的底层实现，其查找删除插入操作是有不同的时间复杂度的。有一些底层实现好像是二分搜索树，故插入查找删除时按logn来算。
但是有一些是使用哈希表来实现的（HashMap）其插入删除和查找是o(1)的时间复杂度【哈希表的缺点是失去了数据的顺序性】