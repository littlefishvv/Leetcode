package Aug16toAug23;

/**
 * @author ：Siyuan Gao
 * @date ：Created in 2020/8/23 13:01
 * @description：给定范围 [m, n]，其中 0 <= m <= n <= 2147483647，返回此范围内所有数字的按位与（包含 m, n 两端点）。
 * @modified By：
 * @version: $
 */
public class Problem201 {

    //方法一  找公共前缀  将降格数字不断向右移动，直到数字相当，即数字被缩减为他们的公共前缀，然后，将公共前缀向左移动，将0
//添加到公共前缀的右边以获得最终结果
    public int rangeBitwiseAnd(int m, int n) {
        //既然是连续的数字，这些数字转化为二进制一定有一串公共的前缀 此外，m和n为int，那么与运算之后，只能少而不可能增加
        //每两个数进行与运算，其值为公共二进制前缀，那么，多个数的与运算就是多个数的公共前缀，而多个数的公共前缀实际上就是最大数和最小数的公共前准
        //当前公共前缀可能是000000
        //其实这一题的目的就是找出公共二进制前缀，然后把这个前缀转化为十进制。
        //记录下位移位数
        int  shift=0;
        //找公共前缀
        while(m<n){
            m=m>>1;
            n=n>>1;
            shift++;
        }
        return m<<shift;

    }
    //方法2 n(n-1）会消去最右边的0
}
